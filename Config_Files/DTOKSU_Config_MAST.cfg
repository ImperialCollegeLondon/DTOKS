# DTOKS-U_MAST configuration file
# 13/02/19
#
# This configuration file uses the config4cpp libray, documentation can be found at:
# http://www.config4star.org/

# // ------------------- DATA FILES ------------------- //
Filename = "Data/DTOKSU_MAST.txt";
DataFilePrefix = "Data/MAST";


# // ------------------- PLASMA GRID ---------------------- //
plasma{
	ContinuousPlasma = "true";
	Plasma = "h";
	MeanIonization = "1.0";
	# xSpacing = zSpacing = 0.01
	# Plasmagrid must be specified if ContinuousPlasma == "false"
	plasmagrid {
		Plasmadir = "PlasmaData/MAST/";
		Walldir = "";
		Coredir = "";
		Machine = "m";
		xSpacing = "0.01";
		zSpacing = "0.01";
	}
	
	# // ------------------- PLASMA DATA --------------------- //
	# If ContinuousPlasma == false, then parts of plasmadata configuration will be overwritten by
	# datafile 
	plasmadata {
		IonDensity 	= "1e18";
		ElectronDensity = "1e18";
		NeutralDensity 	= "1e18";
		IonTemp 	= "10000.0";
		NeutralTemp 	= "10000.0";
		ElectronTemp 	= "10000.0";
		AmbientTemp 	= "300";
		PlasmaVelocity	= ["500.0", "7000.0", "900.0"];
		Gravity		= ["0.0", "0.0", "-9.81"];
		Efield		= ["-10.0", "0", "-30.0"];
		Bfield		= ["0.02", "0.3", "0.04"];
	}
}
# // ------------------- DUST ---------------------------- //
# Parameters describing the heating model
# Element, (W) : Tungsten, (G) : Graphite, (B) : Beryllium, (F) : Iron.
# Element, (L) : Lithium, (Mo) : Molybdenum or (D) : Deuterium
# size = radius in metres
# Temp = Temperature in (K)
dust {
	Element="G";
	size="100e-6";
	Temp="300";
	dynamics {
#		PARAMETERS FOR MAST LOWER OUTER DIVERTOR
		rpos = "1.15";
		thetapos = "0.0";
		zpos = "-1.99";
		rvel = "-1.0";
		thetavel = "1.0";
		zvel = "10.0";

#		PARAMETERS FOR MAST MID OUTER DIVERTOR
#		rpos = "1.3";
#		thetapos = "0.0";
#		zpos = "-1.50";
#		rvel = "-20.0";
#		thetavel = "-0.0";
#		zvel = "5.0";
		InitRotationalFreq = "0.0";
	}
}

# // ------------------- DEFINE MODELS -------------------- //
# Define the behaviour of the models for the temperature dependant constants, 
# the time step and the 'Name' variable.
# Possible values for Emissivity Model:
# 'c' and 'f': Corresponding to (c)onstant and from (f)ile
# Possible values for Expansion Model:
# 'c', 'v' and 's': Corresponding to (constant, (v)ariable, (s)et and (z)ero expansion
# Possible values for Heat Capacity Model:
#'c', 'v' and 's': Corresponding to (c)onstant, (v)ariable and (s)et
# Possible values for Boiling Model:
#'y', 'n', 's' and 't': Corresponding to (y)es, (n)o, (s)uper and (t)homson
# Possible values for Breakup Model:
#'r', 'e', 'b' and 'n': Corresponding to (r)otational, (e)lectrostatic, (b)oth and (n)o
variablemodels {
	EmissivityModel = "c";
	ExpansionModel = "c";
	HeatCapacityModel = "c";
	BoilingModel = "y";
	BreakupModel = "e";
}

# // ------------------- HEATING MODELS ------------------ //
# Set to true all heating models that are wanted
heatingmodels {
	RadiativeCooling = "true";
	EvaporativeCooling = "true";
	NewtonCooling = "false";
	NeutralHeatFlux = "true";

	SOMLIonHeatFlux = "false";
	SOMLNeutralRecombination = "false";
	SMOMLIonHeatFlux = "false";
	SMOMLNeutralRecombination = "false";

	SEE = "true";
	TEE = "true";
	PHLElectronHeatFlux = "false";
	OMLElectronHeatFlux = "true";

	DTOKSSEE = "false";
	DTOKSTEE = "false";
	DTOKSIonHeatFlux = "true";
	DTOKSNeutralRecombination = "true";
	DTOKSElectronHeatFlux = "true";

	DUSTTIonHeatFlux = "false";
}

# // ------------------- FORCING MODELS ------------------- //
forcemodels {
	Gravity = "true";
	Centrifugal = "true";
	Lorentz = "true";
	SOMLIonDrag = "false";	
	SMOMLIonDrag = "false";	
	DTOKSIonDrag = "false";	
	DUSTTIonDrag = "false";	
	HybridDrag = "true";
	NeutralDrag = "true";
	RocketForce = "false";
}

# // ------------------- CHARGING MODELS ------------------ //
# ONLY ONE SHOULD BE ON
chargemodels {
        DYNAMIC = "false";
        OML = "true";
        MOML = "false";
        SOML = "false";
        SMOML = "false";
	CW = "false";
	PHL = "false";
	THS = "false";
	DTOKSOML = "false";
	DTOKSWell = "false";
        MOMLWEM = "false";
}

# // ------------------- ACCURACY MODELS ------------------ //
# Accuracy Levels correspond to Charging, Heating and Forcing respectively
accuracylevels {
	charge = "0.01";
	force = "0.1";
	heat = "1.0";
}

