# DTOKS-U_Magnum-PSI configuration file
# 13/02/19
#
# This configuration file uses the config4cpp libray, documentation can be found at:
# http://www.config4star.org/

# // ------------------- DATA FILES ------------------- //
Filename = "Data/DTOKSU_JET.txt";
DataFilePrefix = "Data/JET";

# // ------------------- PLASMA GRID ---------------------- //
plasma{
	ContinuousPlasma = "false";
	Plasma = "h";
	MeanIonization = "1.0";

	# Plasmagrid must be specified if ContinuousPlasma == "false"
	plasmagrid {
		Plasmadir = "PlasmaData/JET/";
		Walldir = "PlasmaData/JET/";
		Coredir = "";
		Machine = "j";
		xSpacing = "0.01";
		zSpacing = "0.01";
	}
	
	# // ------------------- PLASMA DATA --------------------- //
	# If ContinuousPlasma == false, then parts of plasmadata configuration will be overwritten by
	# datafile 
	plasmadata {
		IonDensity 	= "3.8e18";
		ElectronDensity = "1e17";
		NeutralDensity 	= "1e19";
		IonTemp 	= "13780.8";
		NeutralTemp 	= "344.52";
		ElectronTemp 	= "463.77";
		AmbientTemp 	= "300";
		PlasmaVelocity	= ["500.0", "7000.0", "900.0"];
		Gravity		= ["-9.81", "0.0", "0.0"];
		Efield		= ["0.0", "0.0", "0.0"];
		Bfield		= ["0.0", "0.0", "0.4"];
	}
}

# // ------------------- DUST ---------------------------- //
# Parameters describing the heating model
# Element, (W) : Tungsten, (G) : Graphite, (B) : Beryllium or (F) : Iron.
# Element, (L) : Lithium, (Mo) : Molybdenum or (D) : Deuterium
# size = radius in metres
# Temp = Temperature in (K)
# Initial Positions must range from r=0.15 theta~+/-8.73 z=0.120m to 0.195m
# Free-fall through gravity over a 10cm unsimulated region will cause dust velocities of approximately 1.4m/s 
dust {
	Element="W";
	size="20e-6";
	Temp="3500";
	dynamics {
		rpos = "2.6925";
		thetapos = "160.0";
		zpos = "-1.635";
		rvel = "-2";
		thetavel = "0.0";
		zvel = "10.0";
		InitRotationalFreq = "0.0";
	}
}

# // ------------------- DEFINE MODELS -------------------- //
# Define the behaviour of the models for the temperature dependant constants, 
# the time step and the 'Name' variable.
# Possible values for Emissivity Model:
# 'c' and 'f': Corresponding to (c)onstant and from (f)ile
# Possible values for Expansion Model:
# 'c', 'v' and 's': Corresponding to (constant, (v)ariable, (s)et and (z)ero expansion
# Possible values for Heat Capacity Model:
#'c', 'v' and 's': Corresponding to (c)onstant, (v)ariable and (s)et
# Possible values for Boiling Model:
#'y', 'n', 's' and 't': Corresponding to (y)es, (n)o, (s)uper and (t)homson
# Possible values for Breakup Model:
#'r', 'e', 'b' and 'n': Corresponding to (r)otational, (e)lectrostatic, (b)oth and (n)o
variablemodels {
	EmissivityModel = "c";
	ExpansionModel = "c";
	HeatCapacityModel = "c";
	BoilingModel = "y";
	BreakupModel = "n";
}

# // ------------------- HEATING MODELS ------------------ //
# Set to true all heating models that are wanted
heatingmodels {
	RadiativeCooling = "true";
	EvaporativeCooling = "true";
	NewtonCooling = "false";
	NeutralHeatFlux = "true";

	OMLElectronHeatFlux = "true";
	PHLElectronHeatFlux = "false";
	DTOKSElectronHeatFlux = "true";

	SOMLIonHeatFlux = "false";
	SMOMLIonHeatFlux = "false";
	DTOKSIonHeatFlux = "true";
	DUSTTIonHeatFlux = "false";

	SOMLNeutralRecombination = "false";
	SMOMLNeutralRecombination = "false";
	DTOKSNeutralRecombination = "true";

	SEE = "false";
	DTOKSSEE = "true";

	TEE = "false";
	DTOKSTEE = "true";
}

# // ------------------- FORCING MODELS ------------------- //
forcemodels {
	Gravity = "true";
	Lorentz = "true";
	SOMLIonDrag = "false";	
	SMOMLIonDrag = "false";	
	DTOKSIonDrag = "false";	
	DUSTTIonDrag = "false";	
	HybridDrag = "true";
	NeutralDrag = "true";
	RocketForce = "false";
}

# // ------------------- CHARGING MODELS ------------------ //
# ONLY ONE SHOULD BE ON
chargemodels {
	OMLe = "true";
	PHLe = "false";
	THSe = "false";
	DTOKSe = "false";
	OMLi = "true";
	SOMLi = "false";
	SMOMLi = "false";
	THSi = "false";
	DTOKSi = "false";
	TEE = "false";
	TEESchottky = "false";
	SEE = "false";
}


# // ------------------- ACCURACY MODELS ------------------ //
# Accuracy Levels correspond to Charging, Heating and Forcing respectively
accuracylevels {
	charge = "0.01";
	heat = "1.0";
	force = "0.01";
}
