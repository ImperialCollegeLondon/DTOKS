# README_TESTING #
=============

## Author :	Luke Simons
## Date :	23/08/2017
## Description :
This file describes the purpose of the tests present in the subdirectory of the DTOKS code, 
available at https://github.com/LukeSimons/DTOKS-U.
The tests exist in local directory '/Tests' and there are four subdirectories present:
SubDirectories : 	'IntegrationTests', 'ModelTesting', 'UnitTests'

------------------------------------------------------------------------------------------

## IntegrationTetsts:
This directory contains tests which make an effort to reconcile the simulation results of
the numerical models with analytical theory wherever possible. In some cases this is not
achieved as no analytic solution exists and instead, a comparison to the numerical model
as expected is made. Where this is the case, it is stated explicitly in the comments.
Generally, all elements are tested which includes Tungsten (W), Beryllium (Be), Iron (Fe)
and Graphite (G).

Three directories exist within this to test each model within DTOKS in separate sections, 
they are:
Directories: "Charging", "Forcing", "Heating"
Each of these sections and the tests within them will now be discussed in more detail.


## Charging:
This contains tests which aim to establish the normalised potential of the dust grain at 
equilibrium. Since no analytic solution exists for the charge on a dust grain (ignoring
the Lambert W function), the numerical solution is compared to a pre-calculated result

# ChargeTest:
This test simply compares the DTOKS OML result as calculated by the code with the same
expression coded identically to verify the results match


## Forcing:
This contains tests which aim to establish the position of the dust grain after a finite
number of time steps. Comparisons have been made to the expected analytical result.
Those without analytical result have not been considered.
The dust is started with the following parameters:
Size = 5e-8;				// m
Potential = 1;				// Normalised Potential
Temp = 280;				// K
InitialPosition = (0.0,0.0,0.0) 	// m
The initial velocity is different depending on the test being conducted.
A maximum number of time steps is set which is different for each term being tested.

# Gravity Test:
Test if constant acceleration under gravity matches the analytical result
Produce expected results over 85 or so steps. The equation being solved is:
Velocity = InitialVelocity + gravity*Time

# Constant Force Test:
Test if constant Lorentz force (Electric field with no magnetic field) and gravity
Produce expected results over 100 or so steps. The equation being solved is:
Velocity = InitialVelocity + (Electricfield*chargetomassratio + gravity)*Time;

# Constant Magnetic Force Test:
Test if model of constant Magnetic field can be replicated analytically
Produce expected results over 1000000 or so steps. The equation being solved is:
mass*dV/dt = (Velocity X MagneticField), Force equation!

# Constant Lorentz Force Test:
Test if full Lorentz force (Electric field and magnetic field)
Produce expected results over 1000000 or so steps. The Equation being solved is:
mass*dV/dt = (charge*ElectricField + velocity X MagneticField), Force equation!

# Constant Lorentz Gravity Force Test:
Test if full Lorentz force (Electric field and magnetic field) and gravity
Produce expected results over 1000000 or so steps. The equation being solved is:
mass*dV/dt = (charge*ElectricField + velocity X MagneticField) + mass*gravity, Force equation!

# Neutral Drag Test:
Test if Neutral Drag force 
Produce expected results over 100 or so steps. The equation being solved is:
Velocity = InitialVelocity + NeutralDragAcceleration*Time;

# Ion and Neutral Drag Test:
Test if Neutral and Ion Drag forces
Produce expected results over 100 or so steps. The equation being solved is:
Velocity = InitialVelocity + (NeutralDragAcceleration + IonDragAcceleration)*Time;


## Heating:
This contains tests which aim to establish the Temperature of the dust grain after a finite
number of time steps.  Comparisons have been made to the expected analytic result.
Those without analytical result have not been considered.
The dust is started with the following parameters:
Size = 1e-6;               // m
Potential = 1;             // Normalised Potential
Temp = 280;		   // K
In each of these tests, the 'Vapourise()' Heating model command is called. This means the 
heat equation is solved using a 4th order Runge-Kutta method until either:
1) The sample reaches thermal equilibrium
2) The sample vapourises (Mass < 10e-25)

# Constant Heating Test:
Test if constant heating power is comparable to analytic result
The equation being solved is:
dT/dt = Power / (Mass * HeatCapacity)
where Power is a constant, C

# Constant Heating Emissivity Test:
Test if constant heating with thermal radiation is comparable to analytic result
The equation being solved is:
dT/dt = Power / (Mass * HeatCapacity)
where Power is:
Power = C - SurfaceArea*sigma*epsilon*(Temperature^4-AmbientTemperature^4)

# Constant Electron Plasma Heating Test:
Test if constant heating with plasma heating and thermal radiation is comparable to analytic result
The equation being solved is:
dT/dt = Power / (Mass * HeatCapacity)
where Power is:
Power = C + SurfaceArea*(2*ElectronFlux*ElectronTemperature*Kb+2*NeutralFlux*NeutralTemperature*Kb)

# Constant Plasma Heating Test:
Test if constant heating with plasma heating and thermal radiation is comparable to analytic result
The equation being solved is:
dT/dt = Power / (Mass * HeatCapacity)
where Power is:
Power = C + SurfaceArea*(2*ElectronFlux*ElectronTemperature*Kb+2*NeutralFlux*NeutralTemperature*Kb + IonFluxPower)

# Constant Plasma Heating Neutral Recombination Test:
Test if constant heating with plasma heating, thermal radiation and neutral recomb is comparable to analytic result
The equation being solved is:
dT/dt = Power / (Mass * HeatCapacity)
where Power is:
Power = C + SurfaceArea*(2*ElectronFlux*ElectronTemperature*Kb+2*NeutralFlux*NeutralTemperature*Kb + IonFluxPower 
			+ echarge*IonFlux*14.7 )  

# Compare Constant Emissivity Test:
Test if constant heating with thermal radiation with non-const emissivity is comparable to analytic result
The equation being solved is:
dT/dt = Power / (Mass * HeatCapacity)
where Power is:
Power = C - SurfaceArea*sigma*epsilon*(Temperature^4-AmbientTemperature^4)

# Other Tests:
Explanation for Other missing tests of terms:
TEE has no analytical solution as the solution involves exponential integrals
SEE has no result in standard mathematical functions
Qvap has extremely complicated analytical solutions involving the imaginary error function due to Antoinne eq.
Since ion flux depends on electron yield (i.e TEE and SEE), no general analytical solution for negative grains
For the case of constant potential, Q_(i) is constant


------------------------------------------------------------------------------------------

## ModelTesting:
This directory contains Tests of individual component models of DTOKSU, meaning the 
Heating Model, Charging Model and Force Model. The purpose of these tests is to compare
the difference in result between the original models present in DTOKS with the four
additional models since I began work on the code. These namely are:

Neutral drag, Neutral Heating, Evaporative Cooling (and Mass loss), Variable Heat capacity,
Variable Emissivity

Additionally, there is a test to compare the difference between the original DTOKS heating
model with and without these newer models. The following standard plasma conditions are 
utilised throughout these tests unless otherwise stated:

DustSize	 = 1e-6;	 // m
Temp		 = 280;          // K
Potential 	 = 1;		 // Normalised Potential
NeutralDensity   = 1e18;         // m^-3, Neutral Density
IonDensity       = 1e18;         // m^-3, Ion Density
ElectronDensity  = 1e18;         // m^-3, Electron Density
NeutralTemp      = 10*1.16e4;    // K, Neutral Temperature, convert from eV
IonTemp          = 10*1.16e4;    // K, Ion Temperature, convert from eV
ElectronTemp     = 10*1.16e4;    // K, Electron Temperature, convert from eV

For each pair of tests, two different text files are generated with the force data within
them. Both are named after the name of the function. In the case of the 'neutraldragtest'
function, they are "Data/NeutralDragOn.txt" and "Data/NeutralDragOff.txt".

NOTE! These tests must be run from the /DTOKS-U/ directory since the file paths to the plasma
data and emissivity data files are relative not global.


# Neutral Drag Test:
This test evaluates the effect of introducing the neutral drag force into DTOKS. The force 
model is used with an arbitrary initial position (1.0,0.0,0.0). The initial velocity of 
the dust is set to (2.0,3.0,5.0) with the plasma velocity being set to
PlasmaVelocity 	 = (0.0,0.0,0.5*sqrt(Kb*NeutralTemp/Mp));
The equation for neutral drag is given by:
Fnd = (PlasmaVelocity-SampleVelocity)*Mp*sqrt(4*PI)*NeutralFlux*PI*pow(SampleRadius,2)/SampleMass
The numerical solution over 100,000 time steps is calculated. The results for with and 
without the neutral drag force can readily be compared.


# Neutral Heating Test:
This test evaluates the effect of including Neutral heating in the heating model. The
neutral heating term is given by:
NeutralHeatFlux = SurfaceArea*2*NeutralFlux*NeutralTemperature*Kb; // Watts
The heating model is ran until the sample vapourises or reaches thermal equilibrium.


# Evaporative Cooling Test:
This test evaluates the effect of energy and mass loss within the heating model. The mass
loss provides an additional end condition for the simulation below the boiling temperature
due to vaporisation. The equation for evaporative cooling is given by the Hertz-Knudsen
equation which is
EvaporativeFlux = (StickCoeff*SampleSurfaceArea*AvNo*(SampleVapourPressure-AmbientPressure))/
                        sqrt(2*PI*SampleAtomicMass*R*DustTemperature);
which gives the rate of mass loss as
MassLoss = EvaporationFlux*SampleAtomicMass/AvNo
and the rate of energy loss
HeatLoss = EvaporationFlux*(3*Kb*DustTemperature/2)+SampleBondEnergy/AvNo)
The heating model is ran until the sample vapourises or reaches thermal equilibrium.


# Variable Heat Capacity Test:
This test evaluates the effect of allowing Heat capacity to vary as a function of 
temperature. For each of the different materials, a different empirical relation has been
used to define the variation with temperature. Most of these relations are found at:
Chase, M. (1998). NIST-JANAF Thermochemical Tables, 4th Edition. 
Journal of Physical and Chemical Reference Data, Monograph 9.
These are compared to the 'default' constant values of heat capacity which are set by the
constructors of each element where, by design, a function called '<elementname>_defaults()' 
is called by the constructor to establish their value.

# Variable Emissivity Test:
This test evaluates the effect of allowing Emissivity to vary as a function of 
temperature and size. For each of the different materials, a set of tabulated data has 
been generated from the Wiscombe Mie scattering Fortran code, see reference
Wiscombe, W. J. (1980). Improved Mie scattering algorithms. Applied Optics, 19(9), 1505–9. 
This data is not available in the github repository but can be made available locally
if placed under the heading:
/Models/EmissivityData/EmissivityData<ElementName>/Temp_<Temperature(K)>.txt
for example ...
/Models/EmissivityData/EmissivityDataIron/Temp_1383.txt
where Temp_1383.txt contains two collum data for a temperature of 1383K of comma delimited
data. The first collum is the size of the dust grain in metres and the second collum is 
the emissivity.
These are compared to the 'default' constant values of emissivity which are set by the
constructors of each element where, by design, a function called '<elementname>_defaults()' 
is called by the constructor to establish their value.

# Before After Heating Test:
This test evaluates the total effect of the introduction of all four of the new models
to the heating model. This includes the variational emissivity and heat capacity, plus the
addition of the neutral heating and evaporative cooling terms. 
These are compared to the 'default value' versions with the additional two terms in the heat
equation turned off.


------------------------------------------------------------------------------------------

## UnitTests:
This directory contains small independant scripts which are designed to calculate one 
specific value or the value of an equation or function over a range of parameters. The
tests are split into three main categories.
Categories :		'Charging Tests', 'Force Tests', 'Heat Tests'

There is also one uncategorised test called 'BackscatterTest'.

# Uncategorised Test:

Backscatter Unit Test:
This test prints the values of the fraction of backscattered energy and the fraction of back scattered particles
as calculated by the backscatter function from DTOKS. This can be readily compared to the results published in
"Dust in tokamaks: An overview of the physical model of the dust in tokamaks code." Physics of Plasmas, 17(4).
Bacharis, M., Coppins, M., & Allen, J. E. (2010). 


# Charging Tests:

Delta Sec Unit Test:
This test prints the value of the empirical function calculating the yield due to secondary electron emission.
The result can be readily compared to the publication
Replicating work of "Dust in tokamaks: An overview of the physical model of the dust in tokamaks code"
Bacharis, Minas Coppins, Michael Allen, John E.
Page 2 & 3

Delta Therm Unit Test:
This test prints the value of the 'effective yield' from the Richardson-Dushmann formula (Without Schottky correction).
This can also be readily compared to the publication
Replicating work of "Dust in tokamaks: An overview of the physical model of the dust in tokamaks code"
Bacharis, Minas Coppins, Michael Allen, John E.
Page 2 & 3

Charging Timescale Test:
This test is used to verify that the timestep as calculated by Krasheninnikovs is always smaller
than the electron plasma frequency. In practice, this is found to not be perfectly true, there exist
extreme conditions where this is not the case.
Time step based on the formulation by Krasheninnikov
Smirnov, R. D., Pigarov, A. Y., Rosenberg, M., Krasheninnikov, S. I., & Mendis, D. a. (2007). 
Modelling of dynamics and transport of carbon dust particles in tokamaks. 
Plasma Physics and Controlled Fusion, 49(4), 347–371.        

DTOKS Charging Test:
This test output the potential as calculated by the DTOKS solution to the OML equation.
The form of this is such that it depends on the sign of the potential and the magnitude of the total electron emission.
This test was used to show the discontinuity in the potential when the total electron emission yield approaches 1
Two different conditional formulations of the problem are made and their differences highlighted by this test

OML Charging Test:
This test is designed to find the floating potential for small dust grains in a stationary plasma following OML theory.
This employs an approximate series expansion to the Lambert W function to find the floating potential

MOML Charging Test:
This test is designed to find the floating potential for large dust grains in a stationary plasma following MOML theory.
This employs an approximate series expansion to the Lambert W function to find the floating potential

SOML Charging Test:
This test is designed to find the floating potential for small dust grains in a flowing plasma following SOML theory.
This employs an approximate series expansion to the Lambert W function to find the floating potential

SMOML Charging Test:
This test is designed to find the floating potential for large dust grains in a flowing plasma following SMOML theory.
This employs an approximate series expansion to the Lambert W function to find the floating potential

Schottky OML Charging Test:
This test was made to see what the solution is for electron emission with Schottky correction where the potential of the
dust grain is accounted for. The minimisation of the positive solution in C++ is not stable and gives an incorrect 
answer. Switching to matlab minimisation function, some weird things happen but, in principle, I showed that the 
function could be minimised.

SchottkyMOML Charging Test: DOESN'T WORK!
This test is designed to find the floating potential for large negative dust grains with electron emission 
This employs an approximate series expansion to the Lambert W function to find the floating potential


# Force Tests:

IonNeutralDrag Force Test: 
This test is designed to compare the relative magnitudes of the ion and neutral drag force.
The Ion Drag force is the one that was originally used in DTOKS while the neutral drag is from DUSTT,
See Pigarov, A. Y., Krasheninnikov, S. I., Soboleva, T. K. and Rognlien, T. D. (2005) 
‘Dust-particle transport in tokamak edge plasmas’, Physics of Plasmas, 12(12), pp. 1–15.


# Heat Tests:

Neutral Heating Test: 
This test is designed to test the neutral heating and show the variation in magnitude for 
the neutral heating term

Evaporative Cooling Test: 
This test is designed to test the evaporative cooling as a function of temperature,
Here it is shown only for Tungsten 

Evaporative Mass Loss Test: 
This test is designed to test the evaporative mass loss as a function of temperature,
Here it is shown only for Tungsten


------------------------------------------------------------------------------------------
